//------------------------------------------------------------------------------
// <auto-generated>
//    此代码是根据模板生成的。
//
//    手动更改此文件可能会导致应用程序中发生异常行为。
//    如果重新生成代码，则将覆盖对此文件的手动更改。
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Data.EntityClient;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Linq;
using System.Runtime.Serialization;
using System.Xml.Serialization;

[assembly: EdmSchemaAttribute()]
namespace Mobile
{
    #region 上下文
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    public partial class DatabaseEntities : ObjectContext
    {
        #region 构造函数
    
        /// <summary>
        /// 请使用应用程序配置文件的“DatabaseEntities”部分中的连接字符串初始化新 DatabaseEntities 对象。
        /// </summary>
        public DatabaseEntities() : base("name=DatabaseEntities", "DatabaseEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// 初始化新的 DatabaseEntities 对象。
        /// </summary>
        public DatabaseEntities(string connectionString) : base(connectionString, "DatabaseEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// 初始化新的 DatabaseEntities 对象。
        /// </summary>
        public DatabaseEntities(EntityConnection connection) : base(connection, "DatabaseEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region 分部方法
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet 属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<UserAccount> UserAccount
        {
            get
            {
                if ((_UserAccount == null))
                {
                    _UserAccount = base.CreateObjectSet<UserAccount>("UserAccount");
                }
                return _UserAccount;
            }
        }
        private ObjectSet<UserAccount> _UserAccount;

        #endregion

        #region AddTo 方法
    
        /// <summary>
        /// 用于向 UserAccount EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddToUserAccount(UserAccount userAccount)
        {
            base.AddObject("UserAccount", userAccount);
        }

        #endregion

    }

    #endregion

    #region 实体
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DatabaseModel", Name="UserAccount")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class UserAccount : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 UserAccount 对象。
        /// </summary>
        /// <param name="id">Id 属性的初始值。</param>
        /// <param name="account">Account 属性的初始值。</param>
        /// <param name="password">Password 属性的初始值。</param>
        /// <param name="delFlag">DelFlag 属性的初始值。</param>
        /// <param name="insertTime">InsertTime 属性的初始值。</param>
        /// <param name="updateTime">UpdateTime 属性的初始值。</param>
        public static UserAccount CreateUserAccount(global::System.Guid id, global::System.String account, global::System.Byte[] password, global::System.Byte delFlag, global::System.DateTime insertTime, global::System.DateTime updateTime)
        {
            UserAccount userAccount = new UserAccount();
            userAccount.Id = id;
            userAccount.Account = account;
            userAccount.Password = password;
            userAccount.DelFlag = delFlag;
            userAccount.InsertTime = insertTime;
            userAccount.UpdateTime = updateTime;
            return userAccount;
        }

        #endregion

        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Guid _Id;
        partial void OnIdChanging(global::System.Guid value);
        partial void OnIdChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Account
        {
            get
            {
                return _Account;
            }
            set
            {
                OnAccountChanging(value);
                ReportPropertyChanging("Account");
                _Account = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Account");
                OnAccountChanged();
            }
        }
        private global::System.String _Account;
        partial void OnAccountChanging(global::System.String value);
        partial void OnAccountChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte[] Password
        {
            get
            {
                return StructuralObject.GetValidValue(_Password);
            }
            set
            {
                OnPasswordChanging(value);
                ReportPropertyChanging("Password");
                _Password = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Password");
                OnPasswordChanged();
            }
        }
        private global::System.Byte[] _Password;
        partial void OnPasswordChanging(global::System.Byte[] value);
        partial void OnPasswordChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte DelFlag
        {
            get
            {
                return _DelFlag;
            }
            set
            {
                OnDelFlagChanging(value);
                ReportPropertyChanging("DelFlag");
                _DelFlag = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DelFlag");
                OnDelFlagChanged();
            }
        }
        private global::System.Byte _DelFlag;
        partial void OnDelFlagChanging(global::System.Byte value);
        partial void OnDelFlagChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime InsertTime
        {
            get
            {
                return _InsertTime;
            }
            set
            {
                OnInsertTimeChanging(value);
                ReportPropertyChanging("InsertTime");
                _InsertTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("InsertTime");
                OnInsertTimeChanged();
            }
        }
        private global::System.DateTime _InsertTime;
        partial void OnInsertTimeChanging(global::System.DateTime value);
        partial void OnInsertTimeChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime UpdateTime
        {
            get
            {
                return _UpdateTime;
            }
            set
            {
                OnUpdateTimeChanging(value);
                ReportPropertyChanging("UpdateTime");
                _UpdateTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UpdateTime");
                OnUpdateTimeChanged();
            }
        }
        private global::System.DateTime _UpdateTime;
        partial void OnUpdateTimeChanging(global::System.DateTime value);
        partial void OnUpdateTimeChanged();

        #endregion

    
    }

    #endregion

    
}
